<?xml version="1.0" encoding="UTF-8"?>
<?jelly escape-by-default='true'?>
<!--
  ~ The MIT License
  ~
  ~ Copyright (c) 2013-2014, CloudBees, Inc.
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->

<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:p="/lib/hudson/project">
    <l:side-panel>
        <l:tasks>
            <j:set var="buildUrl" value="${h.decompose(request)}"/>
            <l:task icon="symbol-reader-outline plugin-ionicons-api" href="${buildUrl.baseUrl}/" title="${%Status}" contextMenu="false"/>
            <l:task icon="symbol-code-slash-outline plugin-ionicons-api" href="${buildUrl.baseUrl}/changes" title="${%Changes}"/>
            <j:choose> <!-- TODO <p:console-link/> may not currently be used as it calls getLogFile -->
                <j:when test="${it.logText.length() > 200000}">
                    <l:task href="${buildUrl.baseUrl}/console" icon="symbol-terminal-outline plugin-ionicons-api" title="${%Console Output}"/>
                    <l:task href="${buildUrl.baseUrl}/consoleText" icon="symbol-document-text-outline plugin-ionicons-api" title="${%View as plain text}"/>
                </j:when>
                <j:otherwise>
                    <l:task icon="symbol-terminal-outline plugin-ionicons-api" href="${buildUrl.baseUrl}/console" title="${%Console Output}">
                        <l:task href="${buildUrl.baseUrl}/consoleText" icon="symbol-document-text-outline plugin-ionicons-api" title="${%View as plain text}"/>
                    </l:task>
                </j:otherwise>
            </j:choose>
            <!-- Build Information -->
            <j:choose>
                <j:when test="${h.hasPermission(it,it.UPDATE)}">
                    <l:task icon="symbol-create-outline plugin-ionicons-api" href="${buildUrl.baseUrl}/configure" title="${%Edit Build Information}"/>
                </j:when>
                <j:otherwise>
                    <l:task icon="symbol-view plugin-workflow-job" href="${buildUrl.baseUrl}/configure" title="${%View Build Information}"/>
                </j:otherwise>
            </j:choose>

            <st:include page="delete.jelly"/>
            <j:if test="${it.hasAllowTerm()}">
                <l:task icon="symbol-close-outline plugin-ionicons-api"
                        href="${buildUrl.baseUrl}/term"
                        title="${%Abort Running Steps}"
                        contextMenu="false"
                        post="true"
                        permission="${it.CANCEL}"
                        requiresConfirmation="true"
                        confirmationMessage="${%Really forcibly abort running steps?}"/>
            </j:if>
            <j:if test="${it.hasAllowKill()}">
                <l:task icon="symbol-close-outline plugin-ionicons-api"
                        href="${buildUrl.baseUrl}/kill"
                        title="${%Force Abort of Entire Build}"
                        contextMenu="false"
                        post="true"
                        permission="${it.CANCEL}"
                        requiresConfirmation="true"
                        confirmationMessage="${%Really forcibly abort entire build?}"/>
            </j:if>
            <st:include page="actions.jelly"/>
            <t:actions actions="${it.transientActions}"/>
            <j:if test="${it.previousBuild!=null}">
                <l:task icon="symbol-arrow-back-outline plugin-ionicons-api" href="${buildUrl.previousBuildUrl}" title="${%Previous Build}" contextMenu="false"/>
            </j:if>
            <j:if test="${it.nextBuild!=null}">
                <l:task icon="symbol-arrow-forward-outline plugin-ionicons-api" href="${buildUrl.nextBuildUrl}" title="${%Next Build}" contextMenu="false"/>
            </j:if>
        </l:tasks>
    </l:side-panel>
</j:jelly>
